# Including this makefile in another makefile.am will add all the necessary rules to automatically build
# the model files. The special variable 'model_h_files' must be defined before including this file.

MODEL_INPUT_GEN = $(top_srcdir)/tools/codegen/cog_input_list.py
MODEL_CODEGEN = $(top_srcdir)/tools/codegen/codegen.py
MODEL_COG = python $(abspath $(top_srcdir)/tools/cog/3rdParty/cogapp/__main__.py) -ed
COG_CONVERT = python $(abspath $(top_srcdir)/tools/codegen/cog_convert.py)
TEMPLATE_DIR = $(top_srcdir)/tools/cog/templates/
COG_TEMPLATES = $(TEMPLATE_DIR)template_

ALL_PRE_COG_TEMPLATES = category_backend_interface.h category_filter.h category.c category.h  node_backend.c \
                        node_backend.h occi.c occi.h riak_backend.c riak_backend.h
                        
ALL_TEMPLATES = $(patsubst %,$(COG_TEMPLATES)%,$(ALL_PRE_COG_TEMPLATES))

COG_COMMON = $(top_srcdir)/tools/codegen/cog_common.py 

model_c_files = $(patsubst %.h,%.c,$(model_h_files))

model_all_files = $(model_backend_h_files) $(model_c_files) $(model_h_files) $(schema_files) $(occi_c_files) $(node_backend_c_files) $(node_backend_h_files) $(occi_filter_files) $(occi_rest_c_files) $(occi_rest_h_files) 

$(model_h_files) : %.h : $(top_srcdir)/model/*.xml $(MODEL_CODEGEN) $(COG_COMMON) $(COG_TEMPLATES)category.h generator_input.txt
	$(MODEL_COG) @generator_input.txt
	
$(model_c_files) : %.c : $(COG_TEMPLATES)category.c generator_input.txt $(ALL_TEMPLATES)
	$(MODEL_COG) @generator_input.txt
	
CLEANFILES = $(model_all_files)

$(COG_TEMPLATES)% : $(TEMPLATE_DIR)%
	$(COG_CONVERT) $(subst template_,, $@) $@ 
	
generator_input.txt : $(MODEL_INPUT_GEN) $(top_srcdir)/model/*.xml
	python $(MODEL_INPUT_GEN) generator_input.txt $(top_srcdir) $(model_h_files)
