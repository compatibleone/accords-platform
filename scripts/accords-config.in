#!/bin/sh
#
# Setup ACCORDS
#
# Copyright: 
#   Prologue 2011
#   Mandriva 2011
#   Bull 2012
#   CityPassenger 2012
# Authors: 
#   Jean Parpaillon
#   Jamie Marshall
#   Liliana Cabalantti
#   Vincent Renardias

set -e

export PATH=@sitepath@:$PATH

if test -e ./accords.ini; then
    . ./accords.ini
elif test -e @pkgsysconfdir@/accords.ini; then
    . @pkgsysconfdir@/accords.ini
fi

# -------------------------------------
# to activate the security using nethsm
# set nethsm to 1
# then specify the security directory.
# -------------------------------------
# nethsm=1
tls=security
# nagios=/usr/local/etc/accords/small-accords-nagios.cfg
# -------------------------------------
# sans security 
# -------------------------------------
nethsm=
nagios=
# tls=
# -------------------------------------
resthost=127.0.0.1
secdir=$tls
zone="europe"
trace=1
threads=1
verbose=0
debug=0
domain=occi
operator=accords
password=co-system

if [ -z "$tls" ]; then
    tempo=1
else
    tempo=2
fi

if [ -z "$target" ]; then
    target=accords.xml
fi

if [ -z "$resthost" ]; then
    resthost=127.0.0.1
fi

if [ -z "$restport" ]; then
    restport=8086
fi

if [ -z "$publisher" ]; then
	if [ -z "$tls" ]; then
	    publisher=http://$resthost:$restport
	else
	    publisher=https://$resthost:$restport
	fi
fi

if [ -z "$monitor" ]; then
    monitor=$trace
fi

aliases="co-start co-platform co-provision co-provider co-broker co-command co-parser co-resolver co-status co-stop run-azprocci run-cosched run-broker run-cops run-coees run-comons run-conets run-coobas run-coss run-ezvm run-coips run-fileserver run-onprocci run-osprocci run-paprocci run-copass run-jpaasprocci run-oaprocci run-dummyprocci run-parser run-procci run-publisher"

_usage() {
    echo "Usage: this script must be called through one of the following name:"
    for alias in $aliases; do
	echo " * $alias"
    done
}

_co-start() {
    echo "Starting ACCORDS"

    echo "Starting accords publication services"
    ./run-publisher &
    sleep $tempo

    echo "Starting accords file services"
    ./run-fileserver & 
    sleep $tempo
    
    echo "Starting accords security services"
    ./run-coss &
    sleep $tempo

    echo "Starting accords monitoring services"
    ./run-comons &
    sleep $tempo
    
    echo "Starting accords accounting services"
    ./run-coobas &
    sleep $tempo
    
    echo "Starting accords networking services"
    ./run-conets &
    sleep $tempo

    echo "Starting accords placement services"
    ./run-cops &
    sleep $tempo
    
    echo "Starting accords energy efficiency services"
    ./run-coees &
    sleep $tempo
    
    echo "Starting accords image storage services"
    ./run-ezvm &
    sleep $tempo

    echo "Starting accords image production services"
    ./run-coips &
    sleep $tempo

    echo "Starting accords parser services"
    ./run-parser &
    sleep $tempo

    echo "Starting accords broker services"
    ./run-broker &
    sleep $tempo

    echo "Starting accords procci services"
    ./run-procci &
    sleep $tempo

    echo "Starting accords scheduling services"
    ./run-cosched &
    sleep $tempo

    echo "Starting accords open stack services"
    ./run-osprocci &
    sleep $tempo

    echo "Starting accords onapp services"
    ./run-oaprocci &
    sleep $tempo

    echo "Starting accords dummy services"
    ./run-dummyprocci &
    sleep $tempo

    echo "Starting accords test occi open stack server"
    ./run-testosocci &
    sleep $tempo

    echo "Starting accords test occi open stack server"
    ./run-testosocci &
    sleep $tempo

    echo "Starting accords sla services"
    ./run-osocciprocci &
    sleep $tempo

    echo "Starting accords open nebula services"
    ./run-onprocci &
    sleep $tempo
    
    echo "Starting accords windows azure services"
    ./run-azprocci &
    sleep $tempo

    echo "ProActive services can be started manually"
    #./run-paprocci &
    #sleep $tempo

    echo "ACCORDS ready"
    ./co-status
}

_co-broker() {
    
} 

_co-command() {

}

_co-parser() {

}

_co-resolver() {

}

_co-status() {
    echo "-----------------------------"
    echo " Accords Platform Components "
    echo "-----------------------------"
    netstat -a -p | grep LISTEN | egrep '(publisher|fileserver|coss|comons|conets|coobas|cops|coees|parser|broker|procci|cosched|ezvm|coips)'
}

co-stop() {
    killall example
    sleep $tempo
    killall jpaasprocci
    sleep $tempo
    killall copaas
    sleep $tempo
    killall slam
    sleep $tempo
    killall onprocci
    sleep $tempo
    killall dcprocci
    sleep $tempo
    killall osocciprocci
    sleep $tempo
    killall testosocci
    sleep $tempo
    killall osprocci
    sleep $tempo
    killall oaprocci
    sleep $tempo
    killall dummyprocci
    sleep $tempo
    killall paprocci
    sleep $tempo
    killall azprocci
    sleep $tempo
    killall cosched
    sleep $tempo
    killall procci
    sleep $tempo
    killall broker
    sleep $tempo
    killall parser
    sleep $tempo
    killall coips
    sleep $tempo
    killall ezvm
    sleep $tempo
    killall coees
    sleep $tempo
    killall cops
    sleep $tempo
    killall conets
    sleep $tempo
    killall coobas
    sleep $tempo
    killall comons
    sleep $tempo
    killall coss
    sleep $tempo
    killall fileserver
    sleep $tempo
    killall publisher
}

_run-azprocci() {
    @bindir@/azprocci --config $target CO-AZPROCCI/1.0
} 

_run-broker() {
    @bindir@/broker --config $target CO-BROKER/1.0
} 

_run-cops() {
    @bindir@/cops --config $target CO-ES/1.0
} 

_run-coees() {
    @bindir@/coees --config $target CO-EES/1.0
} 

_run-comons() {
    @bindir@/comons --config $target CO-MONS/1.0
}

_run-conets() {
    @bindir@/conets --config $target CO-NETS/1.0
}

_run-coobas() {
    @bindir@/coobas --config $target CO-BAS/1.0
}

_run-coss() {
    @bindir@/coss --config $target CO-SS/1.0
}

_run-ezvm() {
    @bindir@/ezvm --config $target CO-EZVM/1.0
}

_run-coips() {
    @bindir@/coips --config $target CO-IPS/1.0
}

_run-fileserver() {
    @bindir@/fileserver --config $target CO-FS/1.0
}

_run-onprocci() {
    @bindir@/onprocci --config $target CO-ONPROCCI/1.0
}

_run-osprocci() {
    @bindir@/osprocci --config $target CO-OSPROCCI/1.0
}

_run-oaprocci() {
    @bindir@/oaprocci --config $target CO-OAPROCCI/1.0
}

_run-dummyprocci() {
    @bindir@/dummyprocci --config $target CO-DUMMYPROCCI/1.0
}

_run-dcprocci() {
    @bindir@/dcprocci --config $target CO-DCPROCCI/1.0
}

_run-paprocci() {
    @bindir@/paprocci --config $target CO-PAPROCCI/1.0
}

_run-osocciprocci() {
    @bindir@/osocciprocci --config $target CO-OSOCCIPROCCI/1.0
}

_run-testosocci() {
    @bindir@/testosocci --config $target CO-TESTOSOCCI/1.0
}

_run-slam() {
    @bindir@/slam --config $target CO-SLAM/1.0
}

_run-copaas() {
    @bindir@/copaas --config $target CO-PAAS/1.0
}

_run-jpaasprocci() {
    @bindir@/jpaasprocci --config $target CO-JPAASPROCCI/1.0
}

_run-example() {
    @bindir@/example --config $target CO-EXAMPLE/1.0
}

_run-parser() {
    @bindir@/parser --config $target CO-PARSER/1.0
}

_run-procci() {
    @bindir@/procci --config $target CO-PROCCI/1.0
}
 
_run-cosched() {
    @bindir@/cosched --config $target CO-SCHED/1.0
}
 
_run-publisher() {
   @bindir@/publisher --config $target CO-PUB/1.0
}

_run-fileserver() {

}

command=
for alias in $aliases; do
    if test "$alias" = "$0"; then
	command=$0
	break
    fi
done

if test -z "$command"; then
    _usage
    exit 1
fi

_$command

exit 0
